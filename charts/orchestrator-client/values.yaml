# Default values for orchestrator-client.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: git.ia.surfsara.nl:5050/netdev/automation/projects/orchestrator-client/dev
  setTag: true
  tag: latest
  secrets:
    - name: gitlab-registry

configMapName: "orchestrator-client-configuration"

nameOverride: "orchestrator-client"
fullnameOverride: "orchestrator-client_service"

service:
  name: orchestrator-client
  type: ClusterIP
  port: 80
  internalPort: 8080

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/issuer: letsencrypt
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
      grpc_set_header l5d-dst-override $service_name.$namespace.svc.cluster.local:$service_port;
  paths:
    - /(.*)
  environmentUrl:
  additionalHosts: []
  tls:
    secretName: tls-secret-orchestrator

pod:
  annotations:
    co.elastic.logs/enabled: "true"
    co.elastic.logs/fileset.stderr: error
    co.elastic.logs/fileset.stdout: access
    co.elastic.logs/module: nginx

resources:
   limits:
     memory: 50Mi
   requests:
     memory: 50Mi

nodeSelector: {}

tolerations: []

affinity: {}

livenessProbe:
  enable: true
  path: /api/user/config
  failureThreshold: 3
  periodSeconds: 30
  timeoutSeconds: 10

readinessProbe:
  enable: true
  path: /api/user/config
  failureThreshold: 3
  periodSeconds: 30
  timeoutSeconds: 10

env:

gitlab:
  app:
  env:

secret:
  secretChecksum:
  secretName:
